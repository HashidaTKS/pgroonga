version: "{build}"
clone_depth: 10
environment:
  GROONGA_VERSION: 8.0.0
  matrix:
    - VS_VERSION: 12
      ARCH: amd64
      POSTGRESQL_VERSION: 9.5.15-1
    - VS_VERSION: 12
      ARCH: amd64
      POSTGRESQL_VERSION: 9.6.11-1
      WAL_SUPPORTED: "yes"
    - VS_VERSION: 12
      ARCH: amd64
      POSTGRESQL_VERSION: 10.6-1
      WAL_SUPPORTED: "yes"
    - VS_VERSION: 12
      ARCH: amd64
      POSTGRESQL_VERSION: 11.1-1
      WAL_SUPPORTED: "yes"
notifications:
  - provider: Webhook
    url: https://webhook.commit-email.info/
# init:
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
install:
  - set PATH=C:\Ruby23-x64\bin;%PATH%
  - set PATH=C:\msys64\usr\bin;%PATH%
  - gem install test-unit
build_script:
  - git submodule update --init
  - cd ..
  - choco install -y curl 7zip.commandline

  # PostgreSQL
  - curl -O http://get.enterprisedb.com/postgresql/postgresql-%POSTGRESQL_VERSION%-windows-x64-binaries.zip
  - 7z x postgresql-%POSTGRESQL_VERSION%-windows-x64-binaries.zip > nul

  - cd pgroonga

  # Groonga
  #   Released version:
  # - curl -O http://packages.groonga.org/source/groonga/groonga-%GROONGA_VERSION%.zip
  # - 7z x groonga-%GROONGA_VERSION%.zip > nul
  # - mv groonga-%GROONGA_VERSION% vendor\groonga
  #   Unreleased version:
  - git clone --depth 1
      https://github.com/groonga/groonga.git
      vendor\groonga
  - cd vendor\groonga
  - git submodule update --init
  - cd vendor
  - ruby download_mecab.rb
  - ruby download_message_pack.rb
  - ruby download_lz4.rb
  - cd ..\..\..

  - set CMAKE_GENERATOR_NAME=Visual Studio %VS_VERSION%
  - if "%VS_VERSION%" == "12"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2013
  - if "%VS_VERSION%" == "14"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2015
  - if "%ARCH%" == "amd64"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% Win64
  - cmake . -G "%CMAKE_GENERATOR_NAME%"
      -DCMAKE_INSTALL_PREFIX="..\\pgsql"
      -DGRN_LOCK_TIMEOUT=900000
      -DGRN_WITH_MRUBY=yes
      -DGRN_WITH_BUNDLED_MECAB=yes
      -DGRN_WITH_BUNDLED_LZ4=yes
      -DGRN_WITH_BUNDLED_MESSAGE_PACK=yes
  - set CMAKE_BUILD_PARALLEL_LEVEL=4
  - cmake --build . --config Debug
  - cmake --build . --config Debug --target Install

test_script:
  # TODO: Remove me when Groonga bundles libstemmer
  - rm sql/full-text-search/text/options/token-filters/custom.sql
  # Reduce tests to reduce test time
  - rm -rf sql/compatibility
  - if not "%WAL_SUPPORTED%" == "yes" (
       rm -rf sql/function/wal-apply/
       rm -rf sql/function/wal-truncate/
       rm -rf sql/function/set-writable/wal-*
    )
  - find sql/* -type d | sed -e 's,^sql,results,' | xargs mkdir -p
  - find sql -name '*.sql' |
      sed -e 's,^sql/,test:\ ,g' |
      sed -e 's,\.sql$,,g' > schedule
  - ps: Set-Culture ja-JP
  - set PG_REGRESS_DIFF_OPTS=-u
  - ..\pgsql\bin\pg_regress
      --bindir=..\pgsql\bin
      --load-extension=pgroonga
      --temp-instance=..\pgsql\test
      --schedule=schedule
      --launcher=test\short-pgappname.bat ||
    (type regression.diffs & nonexistent_command)
  - set PATH=%CD%\..\pgsql\bin;%PATH%
  # TODO: Remove me when we fix test failure on Windows
  - rm test/test-streaming-replication.rb
  - if "%WAL_SUPPORTED%" == "yes" (
       ruby test\run-test.rb
    )
