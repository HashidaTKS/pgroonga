version: "{build}"
clone_depth: 10
environment:
  matrix:
    - VS_VERSION: 12
      ARCH: x64
      POSTGRESQL_VERSION: 9.5.16-1
    - VS_VERSION: 12
      ARCH: x64
      POSTGRESQL_VERSION: 9.6.12-1
      WAL_SUPPORTED: "yes"
    - VS_VERSION: 12
      ARCH: x64
      POSTGRESQL_VERSION: 10.7-1
      WAL_SUPPORTED: "yes"
    - VS_VERSION: 12
      ARCH: x64
      POSTGRESQL_VERSION: 11.2-1
      WAL_SUPPORTED: "yes"
notifications:
  - provider: Webhook
    url: https://webhook.commit-email.info/
# init:
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
install:
  - set PATH=C:\Ruby26-x64\bin;%PATH%
  - set PATH=C:\msys64\usr\bin;%PATH%
  - gem install test-unit
build_script:
  - git submodule update --init
  - cd ..
  - choco install -y curl 7zip.commandline

  # PostgreSQL
  - curl -O http://get.enterprisedb.com/postgresql/postgresql-%POSTGRESQL_VERSION%-windows-x64-binaries.zip
  - 7z x postgresql-%POSTGRESQL_VERSION%-windows-x64-binaries.zip > nul

  - cd pgroonga

  # Groonga
  - curl -O http://packages.groonga.org/source/groonga/groonga-latest.zip
  - 7z x groonga-latest.zip > nul
  - rm groonga-latest.zip
  - mv groonga-* vendor\groonga

  - set CMAKE_GENERATOR_NAME=Visual Studio %VS_VERSION%
  - if "%VS_VERSION%" == "12"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2013
  - if "%VS_VERSION%" == "14"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2015
  - if "%ARCH%" == "x64"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% Win64
  - cmake . -G "%CMAKE_GENERATOR_NAME%"
      -DCMAKE_INSTALL_PREFIX="..\\pgsql"
      -DPGRN_POSTGRESQL_VERSION=%POSTGRESQL_VERSION%
      -DGRN_WITH_MRUBY=yes
      -DGRN_WITH_BUNDLED_MECAB=yes
      -DGRN_WITH_BUNDLED_LZ4=yes
      -DGRN_WITH_BUNDLED_MESSAGE_PACK=yes
  - set CMAKE_BUILD_PARALLEL_LEVEL=4
  - cmake --build . --config RelWithDebInfo
  - cmake --build . --config RelWithDebInfo --target install
  - cmake --build . --config RelWithDebInfo --target package

test_script:
  # TODO: Remove me when Groonga bundles libstemmer
  - rm sql/full-text-search/text/options/token-filters/custom.sql
  # Reduce tests to reduce test time
  - rm -rf sql/compatibility
  - if not "%WAL_SUPPORTED%" == "yes" (
       rm -rf sql/function/wal-apply/
       rm -rf sql/function/wal-truncate/
       rm -rf sql/function/set-writable/wal-*
    )
  - find sql/* -type d | sed -e 's,^sql,results,' | xargs mkdir -p
  - find sql -name '*.sql' |
      sed -e 's,^sql/,test:\ ,g' |
      sed -e 's,\.sql$,,g' > schedule
  - ps: Set-Culture ja-JP
  - set PG_REGRESS_DIFF_OPTS=-u
  # - ..\pgsql\bin\pg_regress
  #     --bindir=..\pgsql\bin
  #     --load-extension=pgroonga
  #     --temp-instance=..\pgsql\test
  #     --schedule=schedule
  #     --launcher=test\short-pgappname.bat
  - set PATH=%CD%\..\pgsql\bin;%PATH%
  # TODO: Remove me when we fix test failure on Windows
  - rm test/test-streaming-replication.rb
  - if "%WAL_SUPPORTED%" == "yes" (
      ruby test\run-test.rb
    )

on_success:
  - ps: $Env:PGROONGA_VERSION = (Get-Content pgroonga.control)[0] -replace "^.*'(.+)'","`$1"
  - ps: Push-AppveyorArtifact pgroonga-$Env:PGROONGA_VERSION-postgresql-$Env:POSTGRESQL_VERSION-$Env:ARCH.zip

on_failure:
  - type regression.diffs
