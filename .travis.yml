notifications:
  webhooks:
    - https://webhook.commit-email.info/
dist: xenial
language: c
matrix:
  include:
    # - name: "9.4"
    #   env:
    #     PG_VERSION: 9.4
    #   addons:
    #     apt:
    #       packages:
    #         - libmsgpack-dev
    #         - postgresql-server-dev-9.4
    #     postgresql: "9.4"
    # - name: "9.5"
    #   env:
    #     PG_VERSION: 9.5
    #   addons:
    #     apt:
    #       packages:
    #         - libmsgpack-dev
    #         - postgresql-server-dev-9.5
    #     postgresql: "9.5"
    # - name: "9.6"
    #   env:
    #     PG_VERSION: 9.6
    #     WAL_SUPPORTED: "yes"
    #   addons:
    #     apt:
    #       packages:
    #         - libmsgpack-dev
    #         - postgresql-server-dev-9.6
    #     postgresql: "9.6"
    # - name: "10"
    #   env:
    #     PG_VERSION: 10
    #     WAL_SUPPORTED: "yes"
    #   addons:
    #     apt:
    #       packages:
    #         - libmsgpack-dev
    #         - postgresql-server-dev-10
    #     postgresql: "10"
    - name: "11"
      env:
        PG_VERSION: 11
        WAL_SUPPORTED: "yes"
      addons:
        apt:
          packages:
            - libmsgpack-dev
            - postgresql-11
            - postgresql-client-11
            - postgresql-server-dev-11
    # - name: "with Groonga master"
    #   env:
    #     PG_VERSION: 10
    #     WAL_SUPPORTED: "yes"
    #     GROONGA_MASTER: "yes"
    #   addons:
    #     apt:
    #       packages:
    #         - libmsgpack-dev
    #         - postgresql-server-dev-10
    #     postgresql: "10"
sudo: required
install:
  - curl --silent --location https://github.com/groonga/groonga/raw/master/data/travis/setup.sh | sh
  - |
    if [ "${GROONGA_MASTER}" != "yes" ]; then
      sudo apt install -qq -y \
        groonga-tokenizer-mecab \
        groonga-token-filter-stem
    fi
  - |
    if [ "${WAL_SUPPORTED}" = "yes" ]; then
      rvm use 2.3.3 --install --binary --fuzzy
      gem install test-unit
    fi
before_script:
  - PKG_CONFIG_PATH=$PWD/data/travis/pkgconfig make DEBUG=1 HAVE_MSGPACK=1
  - sudo make install
script:
  - |
    case ${PG_VERSION} in
      9.3)
        for path in jsonb/ \
                    function/flush/jsonb.sql \
                    function/tokenize/ \
                    function/vacuum/ \
                    full-text-search/jsonb/ \
                    full-text-search/text/options/normalizer/ \
                    full-text-search/text/options/tokenizer/ \
                    reindex/analyze.sql \
                    regexp/text/options/ \
                    groonga-function/tuple-is-alive/ \
                    groonga-function/tuple-is-alive/ \
                    term-search/text/options/
        do
          rm -rf sql/${path}
        done
        rm -rf sql/compatibility
        ;;
      9.4)
        rm -rf sql/function/tokenize/
        for path in full-text-search/text/options/normalizer/ \
                    full-text-search/text/options/tokenizer/ \
                    regexp/text/options/ \
                    term-search/text/options/
        do
          rm -rf sql/$path
          rm -rf sql/compatibility/schema/$path
        done
        ;;
      11)
        sudo systemctl status postgresql
        psql -c 'select version();'
        sudo apt purge postgresql-{9.4,9.5,9.6,10}
        dpkg -l | grep postgresql
        dpkg -S /etc/init.d/postgresql || :
        sudo systemctl restart postgresql
        sudo systemctl status postgresql
        psql -c 'select version();'
        ;;
    esac
  - |
    if [ "${WAL_SUPPORTED}" != "yes" ]; then
      rm -rf sql/function/wal-apply/
      rm -rf sql/function/wal-truncate/
      rm -rf sql/function/set-writable/
    fi
  - sudo -u postgres -H mkdir -p /tmp/space
  - |
    # (for i in $(seq 600)
    #  do
    #    sleep 1
    #    df -h | grep ramfs
    #  done) &
    PG_REGRESS_DIFF_OPTS="-u" \
      make installcheck \
        TMP_DIR=/tmp \
        SETUP_TMP_DIR=no \
        EXTRA_REGRESS_OPTS="--launcher=$(pwd)/test/short-pgappname"
  - |
    if [ "${WAL_SUPPORTED}" = "yes" ]; then
      PATH=/usr/lib/postgresql/$PG_VERSION/bin:$PATH test/run-test.rb
    fi
after_failure:
  - cat regression.diffs
#  - sudo cat /var/ramfs/postgresql/${PG_VERSION}/main/pgroonga.log
